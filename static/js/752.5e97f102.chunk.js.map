{"version":3,"file":"static/js/752.5e97f102.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GOSA-\",\"profileTitle\":\"ProfileInfo_profileTitle__8vMEg\",\"mainPhoto\":\"ProfileInfo_mainPhoto__DxBx-\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\t//\t[переменная state, ф-ция меняет значение state] = useState(инициализация значения state);\r\n\tlet [editMode, setEditMode] = useState(false);\t// использовать локальный state с помощью hook - useState\r\n\tlet [status, setStatus] = useState(props.status);\t\t\t\t// useState возвращает массив из 2х элементоа\r\n\r\n\tuseEffect(() => { // отслеживает global state, при изменении, меняет local state\r\n\t\tsetStatus(props.status);\t// local state\r\n\t}, [props.status]);\t\t\t\t\t// global state\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true); // local state\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\t\t// local state\r\n\t\tprops.updateStatus(status);\t// global state (modified with thunk)\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value); // local state\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>{'Status: '}\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>\r\n\t\t\t\t\t\t\t{props.status || \"-------\"} {/* global state */}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>{'Status: '}\r\n\t\t\t\t\t<input autoFocus={true}\r\n\t\t\t\t\t\t\t\t onChange={onStatusChange}\r\n\t\t\t\t\t\t\t\t onBlur={deactivateEditMode}\r\n\t\t\t\t\t\t\t\t value={status}/> {/* local state */}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import {createField, Input, Textarea} from '../../common/FormsControls/FormsControls';\r\nimport {reduxForm} from 'redux-form';\r\nimport s from './ProfileInfo.module.css';\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\treturn <form onSubmit={handleSubmit}>\r\n\t\t<div>\r\n\t\t\t<button>save</button>\r\n\t\t</div>\r\n\t\t{error && <div className={style.formSummaryError}>\r\n\t\t\t{error}\r\n\t\t</div>\r\n\t\t}\r\n\t\t<div>\r\n\t\t\t<b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n\t\t</div>\r\n\r\n\t\t<div>\r\n\t\t\t<b>My professional skills</b>:\r\n\t\t\t{createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n\t\t</div>\r\n\r\n\r\n\t\t<div>\r\n\t\t\t<b>About me</b>:\r\n\t\t\t{createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n\t\t\treturn <div key={key} className={s.contact}>\r\n\t\t\t\t<b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n\t\t\t</div>\r\n\t\t})}\r\n\t\t</div>\r\n\t</form>\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;\r\n","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n\tlet [editMode, setEditMode] = useState(false);\r\n\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\tconst onSubmit = (formData) => {\r\n\t\tsaveProfile(formData).then(\r\n\t\t\t() => {\r\n\t\t\t\tsetEditMode(false);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<img\tclassName={s.mainPhoto}\r\n\t\t\t\t\t\t\tsrc={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t/>\r\n\t\t\t\t<br/>\r\n\t\t\t\t{ isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n\t\t\t\t{ editMode\r\n\t\t\t\t\t? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}/>\r\n\t\t\t\t\t: <ProfileData goToEditMode={() => {setEditMode(true)} } profile={profile} isOwner={isOwner}/> }\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n\treturn <div>\r\n\t\t{isOwner && <div>\r\n\t\t\t<button onClick={goToEditMode}>edit</button>\r\n\t\t</div>}\r\n\r\n\t\t<div>\r\n\t\t\t<b>Full name</b>: {profile.fullName}\r\n\t\t</div>\r\n\r\n\t\t<div>\r\n\t\t\t<b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n\t\t</div>\r\n\t\t\t{profile.lookingForAJob &&\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n\t\t\t\t</div>}\r\n\r\n\t\t<div>\r\n\t\t\t<b>About me</b>: {profile.aboutMe}\r\n\t\t</div>\r\n\r\n\t\t<div>\r\n\t\t\t<b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n\t\t\treturn <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n\t\t})}\r\n\t\t</div>\r\n\t</div>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n\treturn <div className={s.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__i2BSj\",\"posts\":\"MyPosts_posts__B8VSj\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ywGzp\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src={props.avatar} alt=\"avatar\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like</span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n\treturn <form onSubmit={props.handleSubmit}>\r\n\t\t<div>\r\n\t\t\t<Field\tname=\"newPostText\"\r\n\t\t\t\t\t\t\tplaceholder={\"Post message\"}\r\n\t\t\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\t\t\tvalidate={[required, maxLength10]} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button>Add post</button>\r\n\t\t</div>\r\n\t</form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\tlet postsElements =\r\n\t\tprops.posts.map(p => <Post key={p.id}\r\n\t\t\tmessage={p.message}\r\n\t\t\tlikesCount={p.likesCount}\r\n\t\t\tavatar={p.avatarLink} />);\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\r\n\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\r\n\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default MyPosts;","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t\taddPost: (newPostText) => {\r\n\t\t\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo\tprofile={props.profile}\r\n\t\t\t\t\t\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\t\t\t\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t\t\t\t\t\t\t\tsaveProfile={props.saveProfile}\r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\r\n// import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport withRouter from '../../hoc/withRouter';\r\nimport Login from '../Login/Login';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\treturn;\r\n\t\t\t// \tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\t// thunk\r\n\t\tthis.props.getStatus(userId);\t\t\t\t// thunk\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (!this.props.authorizedUserId && !this.props.match.params.userId) {\r\n\t\t\treturn <Login/>;\r\n\t\t}\r\n\r\n\t\treturn (<Profile  {...this.props}\r\n\t\t\t\t\t\t\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\t\t\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\t\t\t\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t/>)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n\t\tgetUserProfile,\r\n\t\tgetStatus,\r\n\t\tupdateStatus,\r\n\t\tsavePhoto,\r\n\t\tsaveProfile\r\n\t}), withRouter, // withAuthRedirect,\r\n)(ProfileContainer);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","reduxForm","form","handleSubmit","profile","error","onSubmit","className","style","createField","Input","type","Textarea","Object","keys","contacts","map","key","s","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Contact","contactTitle","contactValue","savePhoto","saveProfile","Preloader","src","photos","large","userPhoto","alt","target","files","length","initialValues","formData","then","avatar","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","Field","name","placeholder","component","validate","required","postsElements","posts","p","avatarLink","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Login","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}