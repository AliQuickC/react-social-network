{"version":3,"file":"static/js/815.0beed06b.chunk.js","mappings":"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","sources":["webpack://social/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://social/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://social/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__GOSA-\",\"profileTitle\":\"ProfileInfo_profileTitle__8vMEg\",\"mainPhoto\":\"ProfileInfo_mainPhoto__DxBx-\"};","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\t//\t[переменная state, ф-ция меняет значение state] = useState(инициализация значения state);\r\n\tlet [editMode, setEditMode] = useState(false);\t// использовать локальный state с помощью hook - useState\r\n\tlet [status, setStatus] = useState(props.status);\t\t\t\t// useState возвращает массив из 2х элементоа\r\n\r\n\tuseEffect(() => { // отслеживает global state, при изменении, меняет local state\r\n\t\tsetStatus(props.status);\t// local state\r\n\t}, [props.status]);\t\t\t\t\t// global state\r\n\r\n\tconst activateEditMode = () => {\r\n\t\tsetEditMode(true); // local state\r\n\t}\r\n\r\n\tconst deactivateEditMode = () => {\r\n\t\tsetEditMode(false);\t\t// local state\r\n\t\tprops.updateStatus(status);\t// global state (modified with thunk)\r\n\t}\r\n\r\n\tconst onStatusChange = (e) => {\r\n\t\tsetStatus(e.currentTarget.value); // local state\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{!editMode &&\r\n\t\t\t\t<div>{'Status: '}\r\n\t\t\t\t\t<span onDoubleClick={activateEditMode}>\r\n\t\t\t\t\t\t\t{props.status || \"-------\"} {/* global state */}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t\t{editMode &&\r\n\t\t\t\t<div>{'Status: '}\r\n\t\t\t\t\t<input autoFocus={true}\r\n\t\t\t\t\t\t\t\t onChange={onStatusChange}\r\n\t\t\t\t\t\t\t\t onBlur={deactivateEditMode}\r\n\t\t\t\t\t\t\t\t value={status}/> {/* local state */}\r\n\t\t\t\t</div>\r\n\t\t\t}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n\tif (!profile) {\r\n\t\treturn <Preloader />\r\n\t}\r\n\r\n\tconst onMainPhotoSelected = (e) => {\r\n\t\tif (e.target.files.length) {\r\n\t\t\tsavePhoto(e.target.files[0]);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={s.descriptionBlock}>\r\n\t\t\t\t<img\tclassName={s.mainPhoto}\r\n\t\t\t\t\t\t\tsrc={profile.photos.large != null ? profile.photos.large : userPhoto}\r\n\t\t\t\t\t\t\talt=\"avatar\"\r\n\t\t\t\t/>\r\n\t\t\t\t{ isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n\t\t\t\t<ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n\r\n\t\t\t\t<h4 className={s.profileTitle}>Имя: {profile.fullName}</h4>\r\n\t\t\t\t<p>Про меня: {profile.aboutMe}</p>\r\n\t\t\t\t<p>Контакты: {JSON.stringify(profile.contacts)}</p>\r\n\t\t\t\t<p>Ищу работу: {profile.lookingForAJob ? 'Да' : 'Нет'}</p>\r\n\t\t\t\t<p>Какую вакансию ищу: {profile.lookingForAJobDescription ? profile.lookingForAJobDescription : ''}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__i2BSj\",\"posts\":\"MyPosts_posts__B8VSj\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ywGzp\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n\treturn (\r\n\t\t<div className={s.item}>\r\n\t\t\t<img src={props.avatar} alt=\"avatar\" />\r\n\t\t\t{props.message}\r\n\t\t\t<div>\r\n\t\t\t\t<span>like</span> {props.likesCount}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Post;\r\n","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n\treturn <form onSubmit={props.handleSubmit}>\r\n\t\t<div>\r\n\t\t\t<Field\tname=\"newPostText\"\r\n\t\t\t\t\t\t\tplaceholder={\"Post message\"}\r\n\t\t\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\t\t\tvalidate={[required, maxLength10]} />\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<button>Add post</button>\r\n\t\t</div>\r\n\t</form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\tlet postsElements =\r\n\t\tprops.posts.map(p => <Post key={p.id}\r\n\t\t\tmessage={p.message}\r\n\t\t\tlikesCount={p.likesCount}\r\n\t\t\tavatar={p.avatarLink} />);\r\n\r\n\tlet onAddPost = (values) => {\r\n\t\tprops.addPost(values.newPostText);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.postsBlock}>\r\n\t\t\t<h3>My posts</h3>\r\n\r\n\t\t\t<AddNewPostFormRedux onSubmit={onAddPost} />\r\n\r\n\t\t\t<div className={s.posts}>\r\n\t\t\t\t{postsElements}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default MyPosts;","// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport { addPostActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tposts: state.profilePage.posts,\r\n\t\tnewPostText: state.profilePage.newPostText\r\n\t}\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\t\taddPost: (newPostText) => {\r\n\t\t\t\t\tdispatch(addPostActionCreator(newPostText));\r\n\t\t\t}\r\n\t}\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<ProfileInfo\tprofile={props.profile}\r\n\t\t\t\t\t\t\t\t\t\tstatus={props.status}\r\n\t\t\t\t\t\t\t\t\t\tupdateStatus={props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t\tisOwner={props.isOwner}\r\n\t\t\t\t\t\t\t\t\t\tsavePhoto={props.savePhoto}\r\n\t\t\t/>\r\n\t\t\t<MyPostsContainer />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getStatus, updateStatus, savePhoto} from \"../../redux/profile-reducer\";\r\n// import { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport withRouter from '../../hoc/withRouter';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\trefreshProfile() {\r\n\t\tlet userId = this.props.match.params.userId;\r\n\t\tif (!userId) {\r\n\t\t\tuserId = this.props.authorizedUserId;\r\n\t\t\tif (!userId) {\r\n\t\t\t\tthis.props.history.push(\"/login\");\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.getUserProfile(userId);\t// thunk\r\n\t\tthis.props.getStatus(userId);\t\t\t\t// thunk\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.refreshProfile();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState, snapshot) {\r\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId ) {\r\n\t\t\tthis.refreshProfile();\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (<Profile  {...this.props}\r\n\t\t\t\t\t\t\t\t\t\t\tprofile={this.props.profile}\r\n\t\t\t\t\t\t\t\t\t\t\tstatus={this.props.status}\r\n\t\t\t\t\t\t\t\t\t\t\tupdateStatus={this.props.updateStatus}\r\n\t\t\t\t\t\t\t\t\t\t\tisOwner={!this.props.match.params.userId}\r\n\t\t\t\t\t\t\t\t\t\t\tsavePhoto={this.props.savePhoto}\r\n\t\t\t\t\t\t/>)\r\n\t}\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n\tprofile: state.profilePage.profile,\r\n\tstatus: state.profilePage.status,\r\n\tauthorizedUserId: state.auth.userId,\r\n\tisAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n\t\tgetUserProfile,\r\n\t\tgetStatus,\r\n\t\tupdateStatus,\r\n\t\tsavePhoto\r\n\t}), withRouter, // withAuthRedirect,\r\n)(ProfileContainer);\r\n"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onChange","e","currentTarget","value","onBlur","updateStatus","profile","isOwner","savePhoto","Preloader","className","s","src","photos","large","userPhoto","alt","type","target","files","length","fullName","aboutMe","JSON","stringify","contacts","lookingForAJob","lookingForAJobDescription","avatar","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","placeholder","component","Textarea","validate","required","postsElements","posts","map","p","avatarLink","id","values","addPost","newPostText","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","React","compose","auth","isAuth","withRouter"],"sourceRoot":""}