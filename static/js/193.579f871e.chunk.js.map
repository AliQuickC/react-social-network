{"version":3,"file":"static/js/193.579f871e.chunk.js","mappings":"0KACA,GAAgB,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,0B,mBCW9K,EARmB,SAACA,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,gBAAKC,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAS,UAC7C,SAAC,KAAI,CAACC,GAAIJ,EAAK,SAAED,EAAMM,QAE/B,ECHA,EAJgB,SAACN,GACb,OAAO,gBAAKG,UAAWC,EAAAA,OAAS,SAAEJ,EAAMO,SAC5C,E,uCCAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAgBrC,GAAeC,EAAAA,EAAAA,GAAU,CAACC,KAAM,uBAAhC,EAduB,SAACX,GACvB,OACC,kBAAMY,SAAUZ,EAAMa,aAAa,WAClC,0BACC,SAACC,EAAA,EAAK,CAACR,KAAK,iBACRS,YAAY,qBACZC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAUX,QAE1B,0BAAK,4BAAQ,aAGhB,ICUA,EAvBgB,SAACR,GAChB,IAAIoB,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAU,CAAYnB,KAAMmB,EAAEnB,KAAMJ,GAAIuB,EAAEvB,IAA1BuB,EAAEvB,GAA8B,IAC1FwB,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAO,CAAYrB,QAASqB,EAAErB,SAAjBqB,EAAE1B,GAA0B,IAMzF,OACC,iBAAKC,UAAWC,EAAAA,QAAU,WACzB,gBAAKD,UAAWC,EAAAA,aAAe,SAC7BkB,KAEF,iBAAKnB,UAAWC,EAAAA,SAAW,WAC1B,yBAAMsB,KACN,SAAC,EAAc,CAACd,SAXC,SAACiB,GACpB7B,EAAM8B,YAAYD,EAAOE,eAC1B,SAaD,E,oECvBIC,EAA6B,SAACZ,GAAK,MAAM,CAC5Ca,OAAQb,EAAMc,KAAKD,OACnB,ECgBD,GAAeE,E,QAAAA,KACdC,EAAAA,EAAAA,KAdqB,SAAChB,GACtB,MAAO,CACNC,YAAaD,EAAMC,YAErB,IACyB,SAACgB,GACzB,MAAO,CACNP,YAAa,SAACC,GACbM,GAASC,EAAAA,EAAAA,GAAmBP,GAC7B,EAEF,KDZgC,SAACQ,GAAe,IAEzCC,EAAiB,qGAKrB,OALqB,8BACtB,WACC,OAAKC,KAAKzC,MAAMiC,QAET,SAACM,GAAS,UAAKE,KAAKzC,SAFI,SAAC,KAAQ,CAACK,GAAG,UAG7C,KAAC,EALqB,CAASqC,EAAAA,WAUhC,OAFqCN,EAAAA,EAAAA,IAAQJ,EAARI,CAAoCI,EAG1E,GCCA,CAGEG,E","sources":["webpack://social/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__tPWs-\",\"dialogItems\":\"Dialogs_dialogItems__4RfkL\",\"active\":\"Dialogs_active__AGRSt\",\"messages\":\"Dialogs_messages__BAafG\",\"message\":\"Dialogs_message__t38Gc\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <Link to={path}>{props.name}</Link>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n\treturn (\r\n\t\t<form onSubmit={props.handleSubmit}>\r\n\t\t\t<div>\r\n\t\t\t\t<Field\tname=\"newMessageBody\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your message\"\r\n\t\t\t\t\t\t\t\tcomponent={Textarea}\r\n\t\t\t\t\t\t\t\tvalidate={[required, maxLength50]} />\r\n\t\t\t</div>\r\n\t\t\t<div><button>Send</button></div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nexport default reduxForm({form: 'dialoAddMessageForm'})(AddMessageForm);\r\n\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\tlet state = props.dialogsPage;\r\n\r\n\tlet dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n\tlet messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />);\r\n\r\n\tlet addNewMessage = (values) => {\r\n\t\tprops.sendMessage(values.newMessageBody);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.dialogs}>\r\n\t\t\t<div className={s.dialogsItems}>\r\n\t\t\t\t{dialogsElements}\r\n\t\t\t</div>\r\n\t\t\t<div className={s.messages}>\r\n\t\t\t\t<div>{messagesElements}</div>\r\n\t\t\t\t<AddMessageForm onSubmit={addNewMessage} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n\tclass RedirectComponent extends React.Component {\r\n\t\trender() {\r\n\t\t\tif (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n\t\t\treturn <Component {...this.props} />\r\n\t\t}\r\n\t}\r\n\r\n\tlet ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n\treturn ConnectedAuthRedirectComponent;\r\n}\r\n","\r\n// eslint-disable-next-line no-unused-vars\r\nimport React from 'react';\r\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport { connect } from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n\treturn {\r\n\t\tdialogsPage: state.dialogsPage,\r\n\t}\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n\treturn {\r\n\t\tsendMessage: (newMessageBody) => {\r\n\t\t\tdispatch(sendMessageCreator(newMessageBody));\r\n\t\t},\r\n\t}\r\n}\r\n\r\nexport default compose(\r\n\tconnect(mapStateToProps, mapDispatchToProps),\r\n\twithAuthRedirect\r\n)(Dialogs);\r\n"],"names":["props","path","id","className","s","to","name","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","Dialogs"],"sourceRoot":""}